@page "/proveedores/compras/editar/{CompraId:long}"
@inject NavigationManager Nav
@inject VetApp.Services.CompraService CompraService
@inject Microsoft.AspNetCore.Components.NavigationManager Navigation

<div class="contenedor">
    <header class="mb-4">
        <p class="titulo">Editar Compra</p>
        <p class="descripcion">Modifica los datos de la compra</p>
    </header>

    @if (Compra == null)
    {
        <p>Cargando...</p>
    }
    else
    {
        <div class="input-container" style="display:flex;flex-direction:column;gap:12px;">
            <input class="input" placeholder="ID del proveedor" @bind="Compra.ProveedorId" type="number" />
            <input class="input" placeholder="ID del usuario" @bind="Compra.UsuarioId" type="number" />
            <input class="input" placeholder="Descripción" @bind="Compra.Descripcion" />
            <input class="input" placeholder="Total" @bind="Compra.Total" type="number" step="0.01" />
            <input class="input" placeholder="Fecha" @bind="Compra.Fecha" type="date" />
        </div>

        <div style="display:flex;gap:12px;margin-top:12px;">
            <button class="boton-verde" @onclick="ActualizarCompra">Actualizar</button>
            <button class="boton-rojo" @onclick="@(() => Nav.NavigateTo("/proveedores/compras/index"))">Cancelar</button>
        </div>
    }
</div>

@code {
    [Parameter] public long CompraId { get; set; }
    private VetApp.Models.CompraActualizar Compra;

    protected override async Task OnInitializedAsync()
    {
        var c = await CompraService.ObtenerPorIdAsync(CompraId);
        Compra = new VetApp.Models.CompraActualizar
        {
            ProveedorId = c.ProveedorId,
            UsuarioId = c.UsuarioId,
            Descripcion = c.Descripcion,
            Fecha = c.Fecha,
            Total = c.Total
        };
    }

    private async Task ActualizarCompra()
    {
        await CompraService.ActualizarAsync(CompraId, Compra);
        Nav.NavigateTo("/proveedores/compras/index");
    }
}
