@page "/dispensas/editar/{Id:int}"
@inject DispensaService DispensaService
@inject UsuarioService UsuarioService
@inject AlmacenService AlmacenService
@inject NavigationManager Navigation
@using Veterinaria.MAUIApp.Models
@using Veterinaria.MAUIApp.Services

<h3>Editar dispensa</h3>

@if (modelo is null)
{
    <p>Cargando datos...</p>
}
else
{
    <EditForm Model="modelo" OnValidSubmit="Actualizar">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Prescripción:</label>
            <InputNumber @bind-Value="modelo.PrescripcionDetalleId" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Almacén:</label>
            <InputSelect @bind-Value="modelo.AlmacenId" class="form-control">
                <option value="">-- Seleccione un almacén --</option>
                @foreach (var almacen in almacenes)
                {
                    <option value="@almacen.Id">@almacen.Nombre</option>
                }
            </InputSelect>
            @if (!string.IsNullOrWhiteSpace(modelo.AlmacenNombre))
            {
                <small class="text-muted">Actual: @modelo.AlmacenNombre</small>
            }
        </div>

        <div class="mb-3">
            <label>Lote:</label>
            <InputNumber @bind-Value="modelo.LoteId" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Cantidad:</label>
            <InputNumber @bind-Value="modelo.Cantidad" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Fecha:</label>
            <InputDate @bind-Value="modelo.Fecha" class="form-control" />
        </div>

        <div class="mb-3">
            <label>Usuario:</label>
            <InputSelect @bind-Value="modelo.UsuarioId" class="form-control">
                <option value="">-- Seleccione un usuario --</option>
                @foreach (var usuario in usuarios)
                {
                    <option value="@usuario.Id">@usuario.NombreCompleto</option>
                }
            </InputSelect>
            @if (!string.IsNullOrWhiteSpace(modelo.UsuarioNombre))
            {
                <small class="text-muted">Actual: @modelo.UsuarioNombre</small>
            }
        </div>

        <button type="submit" class="btn btn-primary">Actualizar</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
    </EditForm>
}

@code {
    [Parameter] public int Id { get; set; }
    private DispensaActualizar? modelo;
    private List<UsuarioRes> usuarios = new();
    private List<AlmacenSalida> almacenes = new();

    protected override async Task OnInitializedAsync()
    {
        var original = await DispensaService.ObtenerPorIdAsync(Id);
        usuarios = await UsuarioService.GetUsuariosAsync();
        almacenes = await AlmacenService.ObtenerTodosAsync();

        if (original is not null)
        {
            modelo = new DispensaActualizar
                {
                    PrescripcionDetalleId = original.PrescripcionDetalleId,
                    LoteId = original.LoteId,
                    Cantidad = original.Cantidad,
                    Fecha = original.Fecha,
                    AlmacenNombre = original.AlmacenNombre,
                    UsuarioNombre = original.UsuarioNombre,

                // Si puedes mapear el nombre al ID, hazlo aquí
                    AlmacenId = almacenes.FirstOrDefault(a => a.Nombre == original.AlmacenNombre)?.Id ?? 0,
                    UsuarioId = usuarios.FirstOrDefault(u => u.NombreCompleto == original.UsuarioNombre)?.Id ?? 0
                };
        }
    }

    private async Task Actualizar()
    {
        if (modelo is not null)
        {
            var resultado = await DispensaService.EditarAsync(Id, modelo);
            if (resultado is not null)
            {
                Navigation.NavigateTo("/dispensas/index");
            }
            else
            {
                Console.WriteLine("❌ Error al actualizar la dispensa");
            }
        }
    }

    private void Cancelar() => Navigation.NavigateTo("/dispensas/index");
}
