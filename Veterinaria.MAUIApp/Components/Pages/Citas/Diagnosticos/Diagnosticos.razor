@page "/diagnosticos/{citaId:long}"
@inject Veterinaria.MAUIApp.Services.DiagnosticoService DiagnosticoService
@inject NavigationManager Navigation
@using Veterinaria.MAUIApp.Models

<div class="container d-flex flex-column justify-content-between min-vh-100 py-3">

    <!-- Header con botón regresar (centrado perfecto) -->
    <div class="container py-3">
        <div class="row align-items-center mb-3 g-0">
            <!-- Izquierda: botón real -->
            <div class="col-auto">
                <button type="button"
                        class="btn btn-light rounded-circle p-0 d-inline-flex align-items-center justify-content-center lh-1 flex-shrink-0"
                        style="width:36px; height:36px;"
                        @onclick='@(() => Navigation.NavigateTo("/citas/" + citaId))'
                        aria-label="Volver a la cita">
                    <i class="bi bi-arrow-left-short fs-5"></i>
                    @* o usa ← si no tienes Bootstrap Icons *@
                </button>
            </div>

            <!-- Centro: título + subtítulo -->
            <div class="col text-center">
                <h5 class="fw-bold mb-0">Diagnósticos de la cita</h5>
                <small class="text-muted">Observa el historial de Diagnósticos</small>
            </div>

            <!-- Derecha: espejo invisible para equilibrar -->
            <div class="col-auto">
                <button class="btn btn-light rounded-circle p-0 d-inline-flex align-items-center justify-content-center lh-1 invisible"
                        style="width:36px; height:36px;" aria-hidden="true">
                    <i class="bi bi-arrow-left-short fs-5"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- 🔎 Barra de filtros -->
    <div class="btn-group w-100 mb-3" role="group">
        <button class='btn @(filtro == "todos" ? "btn-success" : "btn-outline-success")' @onclick='() => CambiarFiltro("todos")'>
            Todos
        </button>
        <button class='btn @(filtro == "activos" ? "btn-success" : "btn-outline-success")' @onclick='() => CambiarFiltro("activos")'>
            Activos
        </button>
        <button class='btn @(filtro == "inactivos" ? "btn-success" : "btn-outline-success")' @onclick='() => CambiarFiltro("inactivos")'>
            Inactivos
        </button>
    </div>

    <!-- Contenido -->
    <div>
        @if (diagnosticos == null)
        {
            <p><em>Cargando...</em></p>
        }
        else if (!diagnosticos.Any())
        {
            <div class="text-center mt-5">
                <p class="fw-bold">No hay diagnósticos</p>
                <small class="text-muted">
                    Actualmente no se han registrado diagnósticos para la cita
                </small>
            </div>
        }
        else
        {
            @foreach (var d in DiagnosticosFiltrados)
            {
                <div class="card bg-white border-0 mb-3 p-3 rounded-4" style="box-shadow:none !important">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="fw-bold mb-0">@d.Nombre</h6>
                        <span class="small text-muted">@d.CreadoAt.ToString("dd/MM/yyyy HH:mm")</span>
                    </div>
                    <p class="mt-2 mb-0 text-dark">@d.Descripcion</p>

                    <!-- Botones más pequeños y alineados a la derecha -->
                    <div class="d-flex justify-content-end gap-2 mt-2">
                        <button class="btn btn-sm rounded-pill px-3 py-1 @(d.EstadoDiagnostico ? "btn-dark" : "btn-success")"
                                style="font-size: 0.85rem;"
                                @onclick="() => CambiarEstado(d.Id, !d.EstadoDiagnostico)">
                            @(d.EstadoDiagnostico ? "Desactivar" : "Activar")
                        </button>
                        <button class="btn btn-sm btn-dark rounded-pill px-3 py-1"
                                style="font-size: 0.85rem;"
                                @onclick="@(() => Navigation.NavigateTo($"/diagnosticos/{citaId}/editar/{d.Id}"))">
                            Editar
                        </button>
                    </div>
                </div>
            }
        }
    </div>

    <!-- Botón fijo abajo -->
    <div class="mt-auto">
        <button class="btn btn-success w-100 py-2 rounded-pill shadow fw-bold"
                @onclick="@(() => Navigation.NavigateTo($"/diagnosticos/{citaId}/agregar"))">
            Agregar nuevo diagnóstico
        </button>
    </div>
</div>

@code {
    [Parameter] public long citaId { get; set; }
    private List<Diagnostico>? diagnosticos;
    private string filtro = "todos";
    private List<Diagnostico> diagnosticosFiltrados = new();

    protected override async Task OnInitializedAsync() =>
        await Cargar();

    private async Task Cargar()
    {
        diagnosticos = await DiagnosticoService.GetByCitaAsync(citaId);
        AplicarFiltro();
    }

    private async Task CambiarEstado(long id, bool estado)
    {
        await DiagnosticoService.CambiarEstadoAsync(citaId, id, estado);
        await Cargar(); // refresca lista
    }

    private void CambiarFiltro(string nuevoFiltro)
    {
        filtro = nuevoFiltro;
        AplicarFiltro();
    }

    private IEnumerable<Diagnostico> DiagnosticosFiltrados =>
        filtro switch
        {
            "activos" => diagnosticos?.Where(d => d.EstadoDiagnostico) ?? Enumerable.Empty<Diagnostico>(),
            "inactivos" => diagnosticos?.Where(d => !d.EstadoDiagnostico) ?? Enumerable.Empty<Diagnostico>(),
            _ => diagnosticos ?? Enumerable.Empty<Diagnostico>()
        };
    private void AplicarFiltro()
    {
        if (diagnosticos == null) return;

        diagnosticosFiltrados = filtro switch
        {
            "activos" => diagnosticos.Where(d => d.EstadoDiagnostico).ToList(),
            "inactivos" => diagnosticos.Where(d => !d.EstadoDiagnostico).ToList(),
            _ => diagnosticos // "todos"
        };
    }
}