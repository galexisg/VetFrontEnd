@page "/diagnosticos/{citaId:long}"
@inject Veterinaria.MAUIApp.Services.DiagnosticoService DiagnosticoService
@inject NavigationManager Navigation
@using Veterinaria.MAUIApp.Models

<div class="container d-flex flex-column justify-content-between min-vh-100 py-3">

    <!-- Header con botón regresar -->
    <div class="d-flex align-items-center mb-3">
        <button class="btn btn-light rounded-circle shadow-sm me-2"
                style="width: 36px; height: 36px; line-height: 1;"
                @onclick='() => Navigation.NavigateTo("/")'>
            ←
        </button>
        <div>
            <h5 class="fw-bold mb-0">Diagnósticos de la cita</h5>
            <small class="text-muted">Observa el historial clínico</small>
        </div>
    </div>

    <!-- Contenido -->
    <div>
        @if (diagnosticos == null)
        {
            <p><em>Cargando...</em></p>
        }
        else if (!diagnosticos.Any())
        {
            <div class="text-center mt-5">
                <p class="fw-bold">No hay diagnósticos</p>
                <small class="text-muted">
                    Actualmente no se han registrado diagnósticos para la cita
                </small>
            </div>
        }
        else
        {
            @foreach (var d in diagnosticos)
            {
                <div class="card shadow-sm border-0 mb-3 p-3 rounded-4" style="background-color: #fff;">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="fw-bold mb-0">@d.Nombre</h6>
                        <span class="small text-muted">@d.CreadoAt.ToString("dd/MM/yyyy HH:mm")</span>
                    </div>
                    <p class="mt-2 mb-0 text-dark">@d.Descripcion</p>

                    <!-- Botones más pequeños y alineados a la derecha -->
                    <div class="d-flex justify-content-end gap-2 mt-2">
                        <button class="btn btn-sm rounded-pill px-3 py-1 @(d.EstadoDiagnostico ? "btn-dark" : "btn-success")"
                                style="font-size: 0.85rem;"
                                @onclick="() => CambiarEstado(d.Id, !d.EstadoDiagnostico)">
                            @(d.EstadoDiagnostico ? "Desactivar" : "Activar")
                        </button>
                        <button class="btn btn-sm btn-dark rounded-pill px-3 py-1"
                                style="font-size: 0.85rem;"
                                @onclick="@( () => Navigation.NavigateTo($"/diagnosticos/{citaId}/editar/{d.Id}") )">
                            Editar
                        </button>
                    </div>
                </div>
            }
        }
    </div>

    <!-- Botón fijo abajo -->
    <div class="mt-auto">
        <button class="btn btn-success w-100 py-2 rounded-pill shadow fw-bold"
                @onclick="@( () => Navigation.NavigateTo($"/diagnosticos/{citaId}/agregar") )">
            Agregar nuevo diagnóstico
        </button>
    </div>
</div>

@code {
    [Parameter] public long citaId { get; set; }
    private List<Diagnostico>? diagnosticos;

    protected override async Task OnInitializedAsync() =>
        await Cargar();

    private async Task Cargar()
    {
        diagnosticos = await DiagnosticoService.GetByCitaAsync(citaId);
    }

    private async Task CambiarEstado(long id, bool estado)
    {
        await DiagnosticoService.CambiarEstadoAsync(citaId, id, estado);
        await Cargar(); // refresca lista
    }
}