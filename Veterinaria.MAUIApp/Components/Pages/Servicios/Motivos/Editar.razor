@page "/motivos/editar/{Id:short}"
@using Veterinaria.MAUIApp.Services
@using Veterinaria.MAUIApp.Models
@using Veterinaria.MAUIApp.Models.Dtos
@inject MotivoService MotivoService
@inject NavigationManager Navigation

<h3>Editar Motivo</h3>

@if (motivoParaEditar == null)
{
    <p><em>Cargando motivo...</em></p>
}
else
{
    <div class="card">
        <div class="card-body">
            <div class="mb-2">
                <label class="form-label">ID:</label>
                <input type="number" @bind="motivoParaEditar.Id" class="form-control" disabled />
            </div>
            <div class="mb-2">
                <label class="form-label">Nombre:</label>
                <input @bind="motivoParaEditar.Nombre" class="form-control" />
            </div>
            <button class="btn btn-primary" @onclick="ActualizarMotivo">Actualizar</button>
            <button class="btn btn-link" @onclick="Cancelar">Cancelar</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public short Id { get; set; }

    // 👇 Solución: Se marca como nulable (?) porque se carga de forma asíncrona.
    private MotivoRequest? motivoParaEditar;

    protected override async Task OnParametersSetAsync()
    {
        var motivoExistente = await MotivoService.ObtenerPorId(Id);
        if (motivoExistente != null)
        {
            motivoParaEditar = new MotivoRequest
            {
                Id = motivoExistente.Id,
                Nombre = motivoExistente.Nombre
            };
        }
    }

    private async Task ActualizarMotivo()
    {
        if (motivoParaEditar != null)
        {
            var actualizado = await MotivoService.Editar(Id, motivoParaEditar);
            if (actualizado != null)
            {
                Navigation.NavigateTo("/motivos");
            }
        }
    }

    private void Cancelar() => Navigation.NavigateTo("/motivos");
}