@page "/servicios/editar/{Id:long}"
@using Veterinaria.MAUIApp.Services
@using Veterinaria.MAUIApp.Models
@using Veterinaria.MAUIApp.Models.Dtos
@inject ServicioService ServicioService
@inject NavigationManager Navigation

<h3>Editar Servicio</h3>

@if (servicioParaEditar == null)
{
    <p><em>Cargando servicio...</em></p>
}
else
{
    <div class="card">
        <div class="card-body">
            <div class="mb-2">
                <label class="form-label">Nombre:</label>
                <input @bind="servicioParaEditar.Nombre" class="form-control" />
            </div>
            <div class="mb-2">
                <label class="form-label">Descripción:</label>
                <input @bind="servicioParaEditar.Descripcion" class="form-control" />
            </div>
            <div class="mb-2">
                <label class="form-label">Precio Base:</label>
                <input type="number" @bind="servicioParaEditar.PrecioBase" class="form-control" />
            </div>
            <button class="btn btn-primary" @onclick="ActualizarServicio">Actualizar</button>
            <button class="btn btn-link" @onclick="Cancelar">Cancelar</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public long Id { get; set; }

    // 👇 Solución: Se marca como nulable (?) porque se carga de forma asíncrona.
    private ServicioRequest? servicioParaEditar;

    protected override async Task OnParametersSetAsync()
    {
        var servicioExistente = await ServicioService.ObtenerPorId(Id);
        if (servicioExistente != null)
        {
            servicioParaEditar = new ServicioRequest
            {
                Nombre = servicioExistente.Nombre,
                Descripcion = servicioExistente.Descripcion,
                PrecioBase = servicioExistente.PrecioBase,
                Estado = servicioExistente.Estado
            };
        }
    }

    private async Task ActualizarServicio()
    {
        if (servicioParaEditar != null)
        {
            var actualizado = await ServicioService.Editar(Id, servicioParaEditar);
            if (actualizado != null)
            {
                Navigation.NavigateTo("/servicios");
            }
        }
    }

    private void Cancelar() => Navigation.NavigateTo("/servicios");
}