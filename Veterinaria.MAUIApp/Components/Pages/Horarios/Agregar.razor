<<<<<<< HEAD
ï»¿@*  @page "/horarios/detalle/crear"
@using Veterinaria.MAUIApp.Models
@using Veterinaria.MAUIApp.Services
@inject NavigationManager Navigation
@inject AgendaService AgendaService
@inject VeterinarioService VeterinarioService // Asume que tienes este servicio
@inject DiaService DiaService // Asume que tienes este servicio

<PageTitle>Crear Nuevo Horario</PageTitle>

<div class="page-container">
    <EditForm Model="@nuevoDetalle" OnValidSubmit="GuardarNuevoRegistro" class="form-content">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-field">
            <label>Veterinario</label>
            <InputSelect @bind-Value="nuevoDetalle.VeterinarioId" class="custom-select">
                <option value="">Seleccionar</option>
                @foreach (var vet in Veterinarios)
                {
                    <option value="@vet.Id.ToString()">@vet.NombreCompleto</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => nuevoDetalle.VeterinarioId)" />
        </div>

        <div class="form-field">
            <label>DÃ­a</label>
            <InputSelect @bind-Value="nuevoDetalle.DiaId" class="custom-select">
                <option value="">Seleccionar</option>
                @foreach (var dia in Dias)
                {
                    <option value="@dia.Id.ToString()">@dia.Nombre</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => nuevoDetalle.DiaId)" />
        </div>
        
        <div class="form-field">
            <label>Bloque Horario</label>
            <InputSelect @bind-Value="nuevoDetalle.BloqueHorarioId" class="custom-select">
                <option value="">Seleccionar</option>
                @foreach (var bloque in BloquesHorario)
                {
                    <option value="@bloque.Id.ToString()">@bloque.Nombre</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => nuevoDetalle.BloqueHorarioId)" />
        </div>

        </EditForm>
=======
ï»¿@page "/horarios/detalle/crear"
@using Veterinaria.MAUIApp.Models
@using Veterinaria.MAUIApp.Services
@using static Veterinaria.MAUIApp.Models.BloqueHorario
@inject NavigationManager Navigation
@inject AgendaService AgendaService
@inject VeterinarioService VeterinarioService
@inject DiaService DiaService
@inject BloqueHorarioService bloqueHorarioService

<PageTitle>Agregar Horario</PageTitle>

<div class="page-container">
    <div class="header">

        <button class="icon-button" @onclick="GoBack">
            <span class="material-icons">arrow_back</span>
        </button>

        <div class="header-title">
            <h2>Agregar Nuevo Horario</h2>
            <p>Define los horarios de trabajo de un veterinario.</p>
        </div>

    </div>

    <div class="content">
        <EditForm Model="@nuevoDetalle" OnValidSubmit="GuardarNuevoRegistro">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="field-group">
                <label>Veterinario</label>
                <InputSelect @bind-Value="nuevoDetalle.VeterinarioId" class="custom-select">
                    <option value="">Seleccionar Veterinario</option>
                    @foreach (var vet in Veterinarios)
                    {
                        <option value="@vet.Id.ToString()">@vet.Usuario.NombreCompleto</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => nuevoDetalle.VeterinarioId)" />
            </div>

            <div class="field-group">
                <label>DÃ­a</label>
                <InputSelect @bind-Value="nuevoDetalle.DiaId" class="custom-select">
                    <option value="">Seleccionar DÃ­a</option>
                    @foreach (var dia in Dias)
                    {
                        <option value="@dia.DiaId.ToString()">@dia.Nombre</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => nuevoDetalle.DiaId)" />
            </div>

            <div class="field-group">
                <label>Bloque Horario</label>

                <InputSelect @bind-Value="nuevoDetalle.BloqueHorarioId" class="custom-select">
                    <option value="">Seleccionar Bloque</option>
                    @foreach (var bloque in BloquesHorario)
                    {
                        <option value="@bloque.Id.ToString()">
                            @bloque.Inicio.ToString(@"hh\:mm") - @bloque.Fin.ToString(@"hh\:mm")
                        </option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => nuevoDetalle.BloqueHorarioId)" />
            </div>

            <div class="modal-footer">
                <button type="button" class="btn-secondary" @onclick="GoBack">Cancelar</button>
                <button type="submit" class="btn-primary" @onclick="GuardarNuevoRegistro">
                    Guardar Horario
                </button>
            </div>
        </EditForm>
    </div>
>>>>>>> cce7d4c545429baff3534df3b6bc33f01fcbd981
</div>

@code {
    // Modelo para enviar datos a la API. Es un DTO de Request.
    public class DetalleHorarioVeterinarioRequest
    {
        public int VeterinarioId { get; set; }
        public int DiaId { get; set; }
        public int BloqueHorarioId { get; set; }
    }
<<<<<<< HEAD
    
    // Asumiendo que tu API tiene endpoints para esto:
    private List<Veterinario> Veterinarios;
    private List<Dia> Dias;
    private List<BloqueHorario> BloquesHorario;

    private DetalleHorarioVeterinarioRequest nuevoDetalle = new();
=======

    // Modelos de salida (Asumiendo que existen)
    private List<VeterinarioSalidaRes> Veterinarios = new();
    private List<Dia> Dias = new();
    // ðŸ‘ˆ Tipo de la lista de Bloques Horario corregido
    private List<BloqueHorarioSalidaRes> BloquesHorario = new();

    private DetalleHorarioVeterinario nuevoDetalle = new();
>>>>>>> cce7d4c545429baff3534df3b6bc33f01fcbd981

    protected override async Task OnInitializedAsync()
    {
        // Llama a tus servicios para cargar los datos de los dropdowns
<<<<<<< HEAD
        Veterinarios = await VeterinarioService.GetVeterinariosAsync();
        Dias = await DiaService.GetDiasAsync();
        BloquesHorario = await AgendaService.GetBloquesHorarioAsync(); // Asumiendo este mÃ© todo
=======
        Veterinarios = await VeterinarioService.ListarAsync();
        Dias = await DiaService.GetDiasAsync();
        // ðŸ‘ˆ MÃ©todo de servicio corregido para usar el ListarTodosAsync del nuevo Service
        BloquesHorario = await bloqueHorarioService.ListarTodosAsync();
>>>>>>> cce7d4c545429baff3534df3b6bc33f01fcbd981
    }

    private async Task GuardarNuevoRegistro()
    {
        // LÃ³gica para guardar el nuevo detalle en la API
<<<<<<< HEAD
=======
        // Si tu servicio devuelve Ã©xito (bool) o un objeto, puedes manejar la respuesta.
>>>>>>> cce7d4c545429baff3534df3b6bc33f01fcbd981
        await AgendaService.CreateDetalleHorarioAsync(nuevoDetalle);
        Navigation.NavigateTo("/agenda");
    }

    private void GoBack()
    {
<<<<<<< HEAD
        Navigation.NavigateTo("/agenda");
    }
}; *@
=======
        // Navega a la vista principal de la agenda.
        Navigation.NavigateTo("/agenda");
    }
}
>>>>>>> cce7d4c545429baff3534df3b6bc33f01fcbd981
