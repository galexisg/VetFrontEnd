@* @page "/razas/editar/{Id:byte}"
@using Veterinaria.MAUIApp.Models
@using Veterinaria.MAUIApp.Services
@inject RazaService razaService
@inject EspecieService especieService
@inject NavigationManager nav

<link rel="stylesheet" href="css/razas.css" />

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-warning text-dark">
            <h5 class="mb-0">
                <i class="bi bi-pencil-square me-2"></i> Editar Raza @modelo?.Id
            </h5>
        </div>
        <div class="card-body">
            @if (cargando)
            {
                <div class="alert alert-info text-center">
                    <span class="spinner-border spinner-border-sm me-2"></span> Cargando datos...
                </div>
            }
            else if (modelo is null)
            {
                <div class="alert alert-danger text-center">
                    Error: no se encontró la raza.
                </div>
            }
            else
            {
                <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">Nombre</label>
                            <InputText class="form-control" @bind-Value="modelo.Nombre" />
                            <ValidationMessage For="@(() => modelo.Nombre)" />
                        </div>

                        <div class="col-md-6">
                            <label class="form-label">Especie</label>
                            <InputSelect class="form-select"
                                         @bind-Value="modelo.EspecieId"
                                         @onchange="OnEspecieChanged">
                                <option value="0">-- Selecciona especie --</option>
                                @foreach (var e in especies)
                                {
                                    <option value="@e.EspecieId">@e.Nombre</option>
                                }
                            </InputSelect>
                            <ValidationMessage For="@(() => modelo.EspecieId)" />
                        </div>
                    </div>

                    <div class="d-flex justify-content-end gap-2 mt-4">
                        <button type="submit" class="btn btn-warning text-dark">
                            <i class="bi bi-check-circle me-1"></i> Guardar
                        </button>
                        <button type="button" class="btn btn-secondary" @onclick="Cancelar">
                            <i class="bi bi-x-circle me-1"></i> Cancelar
                        </button>
                    </div>
                </EditForm>

                @if (guardadoExitoso)
                {
                    <div class="alert alert-success mt-3 text-center">
                        <i class="bi bi-check-circle me-1"></i> Cambios guardados.
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public byte Id { get; set; }

    private RazaModificarReq? modelo;
    private List<EspecieRes>? especies;
    private bool cargando = true;
    private bool guardadoExitoso;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            especies = await especieService.ListarAsync();

            var datos = await razaService.ObtenerPorIdAsync(Id);
            if (datos is not null)
            {
                modelo = new RazaModificarReq
                    {
                        Id = datos.Id,
                        Nombre = datos.Nombre,
                        EspecieId = datos.EspecieId,   // si es 0 → se mostrará "Selecciona especie"
                        EspecieNombre = datos.EspecieNombre
                    };
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error cargando datos: {ex.Message}");
        }
        finally
        {
            cargando = false;
        }
    }

    private void OnEspecieChanged(ChangeEventArgs args)
    {
        if (byte.TryParse(args.Value?.ToString(), out var id)
            && especies?.Any(e => e.EspecieId == id) == true
            && modelo is not null)
        {
            modelo.EspecieNombre = especies.First(e => e.EspecieId == id).Nombre;
        }
    }

    private async Task GuardarCambios()
    {
        if (modelo is null) return;

        var sel = especies?.FirstOrDefault(e => e.EspecieId == modelo.EspecieId);
        if (sel is not null)
            modelo.EspecieNombre = sel.Nombre;

        var respuesta = await razaService.EditarAsync(Id, modelo);
        if (respuesta is not null)
        {
            guardadoExitoso = true;
            await Task.Delay(1500);
            nav.NavigateTo("/razas/indexmascotas", forceLoad: true);
        }
    }

    private void Cancelar() => nav.NavigateTo("/razas/indexmascotas");
}
 *@