@page "/veterinarios/agregar"
@using Veterinaria.MAUIApp.Models
@inject VeterinarioService veterinarioService
@inject EspecialidadService especialidadService
@inject ServicioService servicioService
@inject NavigationManager nav

<link rel="stylesheet" href="css/veterinarios.css" />

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-success text-white">
            <h5 class="mb-0">
                <i class="bi bi-plus-circle me-2"></i> Registrar Nuevo Veterinario
            </h5>
        </div>
        <div class="card-body">
            @if (usuarios.Count == 0 || especialidades.Count == 0 || servicios.Count == 0)
            {
                <div class="alert alert-info text-center">
                    <span class="spinner-border spinner-border-sm me-2"></span> Cargando datos...
                </div>
            }
            else
            {
                <EditForm EditContext="editContext" OnValidSubmit="GuardarVeterinario">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <!-- Número de licencia -->
                    <div class="mb-3">
                        <label class="form-label">Número de Licencia</label>
                        <InputText class="form-control" @bind-Value="nuevoVeterinario.NumeroLicencia" />
                    </div>

                    <!-- Usuario -->
                    <div class="mb-3">
                        <label class="form-label">Usuario</label>
                        <InputSelect class="form-select" @bind-Value="nuevoVeterinario.UsuarioId">
                            <option value="">-- Selecciona un usuario --</option>
                            @foreach (var user in usuarios)
                            {
                                <option value="@user.Id">@user.NombreCompleto</option>
                            }
                        </InputSelect>
                    </div>

                    <!-- Especialidad -->
                    <div class="mb-3">
                        <label class="form-label">Especialidad</label>
                        <InputSelect class="form-select" @bind-Value="nuevoVeterinario.EspecialidadId">
                            <option value="">-- Selecciona una especialidad --</option>
                            @foreach (var esp in especialidades)
                            {
                                <option value="@esp.EspecialidadId">@esp.Nombre</option>
                            }
                        </InputSelect>
                    </div>

                    <!-- Servicio -->
                    <div class="mb-3">
                        <label class="form-label">Servicio</label>
                        <InputSelect class="form-select" @bind-Value="nuevoVeterinario.ServicioId">
                            <option value="">-- Selecciona un servicio --</option>
                            @foreach (var serv in servicios)
                            {
                                <option value="@serv.Id">@serv.Nombre</option>
                            }
                        </InputSelect>
                    </div>

                    <!-- Botones -->
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-check-circle me-1"></i> Guardar
                        </button>
                        <button type="button" class="btn btn-secondary" @onclick="Cancelar">
                            <i class="bi bi-x-circle me-1"></i> Cancelar
                        </button>
                    </div>
                </EditForm>
            }

            <!-- Validaciones de carga -->
            @if (usuarios.Count == 0)
            {
                <div class="alert alert-danger mt-3">⚠️ No se cargaron usuarios con rol Veterinario.</div>
            }
            @if (especialidades.Count == 0)
            {
                <div class="alert alert-danger mt-3">⚠️ No se cargaron especialidades.</div>
            }
            @if (servicios.Count == 0)
            {
                <div class="alert alert-danger mt-3">⚠️ No se cargaron servicios.</div>
            }
        </div>
    </div>
</div>

@code {
    private VeterinarioGuardarReq nuevoVeterinario = new();
    private EditContext editContext;

    private List<UsuarioSalidaRes> usuarios = new();
    private List<EspecialidadSalidaRes> especialidades = new();
    private List<Servicio> servicios = new();

    protected override async Task OnInitializedAsync()
    {
        editContext = new EditContext(nuevoVeterinario);

        try
        {
            // 🔹 Solo usuarios con rol Veterinario
            usuarios = await veterinarioService.ListarUsuariosVeterinariosAsync();

            especialidades = await especialidadService.GetActivasAsync();
            servicios = await servicioService.ListarAsync(activo: true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar datos: {ex.Message}");
        }
    }

    private async Task GuardarVeterinario()
    {
        if (!editContext.Validate())
            return;

        var ok = await veterinarioService.CrearAsync(nuevoVeterinario);
        if (ok)
        {
            nav.NavigateTo("/veterinarios/index", forceLoad: true);
        }
        else
        {
            Console.WriteLine("Error al guardar veterinario.");
        }
    }

    private void Cancelar() => nav.NavigateTo("/veterinarios/index");
}
